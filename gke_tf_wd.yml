name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      provision:
        description: Do you want to Provision
        required: true
  push:
    paths:
    - 'gke_tf/**'
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [gke_tf, worker_nodes]
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET }}
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET }}
  
  bootstrap:
    name: bootstrap-cluster
    runs-on: ubuntu-latest
    needs: terraform
    steps:    
      - id: get-credentials
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: production-cluster
          location: us-east1
          credentials: ${{ secrets.GCP_SECRET }}
      
      - id: get-pods
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        run: kubectl get pods -A 

      - id: install-flagger 
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        run: |
          helm repo add flagger https://flagger.app
          helm install my-flagger flagger/flagger --version 1.4.2

      - id: install-istio-operator
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        run: |
          helm repo add stevehipwell https://stevehipwell.github.io/helm-charts/
          helm install my-istio-operator stevehipwell/istio-operator --version 1.2.2

      - id: get-pods-after-bootstrap
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && github.event.inputs.provision == 'yes'
        run: kubectl get pods -A 
